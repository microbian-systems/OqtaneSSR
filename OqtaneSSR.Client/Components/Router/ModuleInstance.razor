@using OqtaneSSR.Client.Models
@using OqtaneSSR.Client.Components

<div style="width: 100%; border-width: 1px; border-style: dashed; border-color: gray;">
	<div style="text-align: center;"><small>(Module: @ModuleState.ModuleType)</small></div>
	<div style="text-align: center;"><small>(Render Mode: @ModuleState.RenderMode)</small></div>
	<br />
	
	@if (ModuleState.RenderMode == "InteractiveServer")
	{
		<RenderModeBoundary TypeName="@ModuleState.ModuleType" ModuleState="@ModuleState" PageState="@PageState" @rendermode="RenderMode.InteractiveServer"></RenderModeBoundary>
	}
	@if (ModuleState.RenderMode == "InteractiveWebAssembly")
	{
		<RenderModeBoundary TypeName="@ModuleState.ModuleType" ModuleState="@ModuleState" PageState="@PageState" @rendermode="RenderMode.InteractiveWebAssembly"></RenderModeBoundary>
	}
	@if (ModuleState.RenderMode == "InteractiveAuto")
	{
		<RenderModeBoundary TypeName="@ModuleState.ModuleType" ModuleState="@ModuleState" PageState="@PageState" @rendermode="RenderMode.InteractiveAuto"></RenderModeBoundary>
	}
	@if (ModuleState.RenderMode == "Server")
	{
		<RenderModeBoundary TypeName="@ModuleState.ModuleType" ModuleState="@ModuleState" PageState="@PageState"></RenderModeBoundary>
	}
</div>

@code {
	[CascadingParameter]
	protected PageState PageState { get; set; }

	[CascadingParameter]
	protected Module ModuleState { get; set; }
}
